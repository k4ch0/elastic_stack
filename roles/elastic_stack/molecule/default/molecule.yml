---
dependency:
  name: galaxy
driver:
  name: docker
lint:
  name: yamllint

platforms:
  - name: xenial-server
    hostname: xenial-server
    image: solita/ubuntu-systemd:16.04
    command: "/sbin/init"
    privileged: true
    docker:
      links:
        xenial-client:client

    # volume_mounts:
    #   - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
    # environment:
    #   container: docker
    groups:
      - servers
      - clients
  - name: xenial-client
    hostname: xenial-client
    image: solita/ubuntu-systemd:16.04
    command: "/sbin/init"
    privileged: true
    docker:
      links:
        xenial-server:server
    # volume_mounts:
    #   - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
    # environment:
    #   container: docker
    groups:
      - clients
provisioner:
  name: ansible
  log: true
  options:
    vvv: true
  config_options:
    defaults:
      retry_files_enabled: false
      stdout_callback: yaml
      # squash_actions: 'apk,apt,dnf,package,pacman,pkgng,yum,zypper'
  raw_env_vars:
    ANSIBLE_CALLBACK_PLUGINS:/home/luis7238/.virtualenvs/ansible2.7-molecule/lib/python2.7/site-packages/ara/plugins/callbacks
    ANSIBLE_ACTION_PLUGINS:/home/luis7238/.virtualenvs/ansible2.7-molecule/lib/python2.7/site-packages/ara/plugins/actions

  lint:
    name: ansible-lint
scenario:
  name: default
  test_sequence:
    - lint
    - destroy
    - dependency
    - syntax
    - create
    - prepare
    - converge
    - idempotence
    - side_effect
    - verify
    - destroy
verifier:
  name: testinfra
  options:
    cache-clear: true
    vvv: false
    verbose: false
    verbosity: 7
    sudo: true
  lint:
    name: flake8
